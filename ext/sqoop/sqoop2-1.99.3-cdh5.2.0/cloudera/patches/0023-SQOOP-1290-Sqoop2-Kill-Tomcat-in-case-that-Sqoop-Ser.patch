From 152b3de57d9fdeaab5e3f3c905efd7c5f9bf4ef3 Mon Sep 17 00:00:00 2001
From: Venkat Ranganathan <venkat@hortonworks.com>
Date: Mon, 24 Feb 2014 10:58:29 -0800
Subject: [PATCH 23/30] SQOOP-1290 Sqoop2: Kill Tomcat in case that Sqoop Server fails to load

(Jarek Jarcec Cecho via Venkat Ranganathan)
---
 .../apache/sqoop/core/ConfigurationConstants.java  |    5 +++++
 .../org/apache/sqoop/server/ServerInitializer.java |   15 ++++++++++++++-
 .../java/org/apache/sqoop/tools/ToolRunner.java    |    4 ++++
 3 files changed, 23 insertions(+), 1 deletions(-)

diff --git a/core/src/main/java/org/apache/sqoop/core/ConfigurationConstants.java b/core/src/main/java/org/apache/sqoop/core/ConfigurationConstants.java
index f225fcb..898ec73 100644
--- a/core/src/main/java/org/apache/sqoop/core/ConfigurationConstants.java
+++ b/core/src/main/java/org/apache/sqoop/core/ConfigurationConstants.java
@@ -76,6 +76,11 @@
   public static final String FRAMEWORK_AUTO_UPGRADE =
       "org.apache.sqoop.framework.autoupgrade";
 
+  /**
+   * Enable Sqoop App to kill Tomcat in case that it will fail to load.
+   */
+  public static final String KILL_TOMCAT_ON_FAILURE = "sqoop.kill_tomcat_on_load_failure";
+
   private ConfigurationConstants() {
     // Disable explicit object creation
   }
diff --git a/server/src/main/java/org/apache/sqoop/server/ServerInitializer.java b/server/src/main/java/org/apache/sqoop/server/ServerInitializer.java
index 44aea2e..a150e3a 100644
--- a/server/src/main/java/org/apache/sqoop/server/ServerInitializer.java
+++ b/server/src/main/java/org/apache/sqoop/server/ServerInitializer.java
@@ -17,6 +17,7 @@
  */
 package org.apache.sqoop.server;
 
+import org.apache.sqoop.core.ConfigurationConstants;
 import org.apache.sqoop.core.SqoopServer;
 
 import javax.servlet.ServletContextEvent;
@@ -33,6 +34,18 @@ public void contextDestroyed(ServletContextEvent arg0) {
   }
 
   public void contextInitialized(ServletContextEvent arg0) {
-    SqoopServer.initialize();
+    try {
+      SqoopServer.initialize();
+    } catch (Throwable ex) {
+      // We are assuming that by default we are running as the only app inside
+      // the tomcat and hence we want to try kill entire tomcat on our load failure.
+      if("true".equals(System.getProperty(ConfigurationConstants.KILL_TOMCAT_ON_FAILURE, "true"))) {
+        System.out.println("Sqoop failed to load:");
+        ex.printStackTrace(System.out);
+        System.exit(1);
+      }
+
+      throw new RuntimeException("Sqoop server failed to load.", ex);
+    }
   }
 }
diff --git a/tools/src/main/java/org/apache/sqoop/tools/ToolRunner.java b/tools/src/main/java/org/apache/sqoop/tools/ToolRunner.java
index 73dc9c5..769c2b4 100644
--- a/tools/src/main/java/org/apache/sqoop/tools/ToolRunner.java
+++ b/tools/src/main/java/org/apache/sqoop/tools/ToolRunner.java
@@ -19,6 +19,7 @@
 package org.apache.sqoop.tools;
 
 import org.apache.sqoop.common.VersionInfo;
+import org.apache.sqoop.core.ConfigurationConstants;
 import org.apache.sqoop.tools.tool.BuiltinTools;
 import org.apache.sqoop.utils.ClassUtils;
 
@@ -67,6 +68,9 @@ public static void main(String[] args) throws Exception {
       throw new RuntimeException("Can't get tool instance: " + args[0]);
     }
 
+    // We do want us to kill the Tomcat when running from tooling
+    System.setProperty(ConfigurationConstants.KILL_TOMCAT_ON_FAILURE, "false");
+
     System.out.println("Running tool: " + toolClass);
     if(tool.runTool(Arrays.copyOfRange(args, 1, args.length))) {
       System.out.println("Tool " + toolClass + " has finished correctly.");
-- 
1.7.0.4

