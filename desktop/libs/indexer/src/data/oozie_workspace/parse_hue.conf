# Licensed to Cloudera, Inc. under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  Cloudera, Inc. licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.from nose.tools import assert_equal
<%page args="format, format_character"/>

{
  readMultiLine{
    regex: "^(?!\\[[0-9]{1,2}\\/\\w+\\/[0-9]{4}.*\\].*).*$"
    what: previous
    charset: UTF-8
  }
}
{ logTrace { format : "Output from multiline {}", args : ["@{}"] } }

{
  grok {
    dictionaryFiles : ["grok_dictionaries"]

    expressions : {
      message: """\[%{GREEDYDATA:date}\] %{WORD:component} +%{LOGLEVEL:log_level} %{GREEDYDATA:details}[\s\S]*"""
    }
  }
}
{ logTrace { format : "Output from multiline grok {}", args : ["@{}"] } }

{
  convertTimestamp {
    field : date
    inputFormats : ["dd/MMM/yyyy HH:mm:ss Z"]
    outputFormat : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
    outputTimezone : UTC
  }
}
