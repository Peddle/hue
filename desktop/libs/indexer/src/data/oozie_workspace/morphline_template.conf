# Licensed to Cloudera, Inc. under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  Cloudera, Inc. licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
SOLR_LOCATOR : {
  # Name of solr collection
  collection : "${collection_name}"

  # ZooKeeper ensemble
  zkHost : "${zk_host}"
}

morphlines : [
  {
    id : ${collection_name}
    importCommands : ["org.kitesdk.**", "org.apache.solr.**"]
    commands : [
      {
        readCSV {
          separator : "${format_character(format['fieldSeparator'])}"
          columns : [
            % for field in fields[:num_base_fields]:
            "${field['name']}"
            %endfor
          ]
          quoteChar : "${format_character(format['quoteChar'])}"
          ignoreFirstLine : "${'true' if format['hasHeader'] else 'false'}"
          charset : UTF-8
        }
      }

      {
        downloadHdfsFile{
          inputFiles:["${grok_dictionaries_location}"]
        }
      }


      {
        generateUUID {
          field : ${uuid_name}
          type : "nonSecure"
        }
      }

      # process operations on fields
      % for field in fields:
        %for operation in field['operations']:
          <%include file="${operation['type']}_operation.conf" args="field=field, operation=operation"/>
        %endfor
      %endfor


      # require that all kept fields are present
      % for field in fields:
        % if field["keep"] and field["required"]:
          {
            if {
              conditions : [
                { equals { "${field['name']}" : [] } }
              ]
              then : [
                { logError { format : "Ignoring record because it has no ${field['name']}: {}", args : ["@{}"] } }
                { dropRecord {} }
              ]
            }
          }
        % endif
      %endfor

      # require that all kept fields match their expected type
      % for field in fields:
        %if field["keep"]:
          {
            if {
              conditions : [
                {
                  grok {
                    expressions : {
                      "${field['name']}" : "${get_regex(field['type'])}"
                    }
                    extract : false

                  }
                }
              ]
              then : []
              else : [
                %if not field["required"]:
                  # if didn't match because the field isn't present then we keep the record
                  {
                    if {
                      conditions : [
                          { equals { "${field['name']}" : [] } }
                      ]
                      then : []
                      else : [
                        { logError { format : "Ignoring record due to incorrect type for ${field['name']}: {}", args : ["@{}"] } }
                        { dropRecord {} }
                      ]
                    }
                  }
                %else:
                  { logError { format : "Ignoring record due to incorrect type for ${field['name']}: {}", args : ["@{}"] } }
                  { dropRecord {} }
                %endif
              ]
            }
          }
        %endif
      %endfor

      # remove excess fields
      {
        sanitizeUnknownSolrFields {
          # Location from which to fetch Solr schema
          solrLocator : <%text>${SOLR_LOCATOR}</%text>
        }
      }

      # log the record at DEBUG level to SLF4J
      { logDebug { format : "output record: {}", args : ["@{}"] } }

      {
        loadSolr {
          solrLocator : <%text>${SOLR_LOCATOR}</%text>
        }
      }

    ]
  }
]